package Solutions;
/*
 * Author - Alexander Kohler
 * 
 */
public class Problem002 {

	/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

		By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/
	
	//Metrics - Slow
	
	
	public static int fib(int x) 
	{
	    if (x == 0)
	        return 0;

	    if (x == 1)
	        return 1;

	    return fib(x-1)+fib(x-2);
	}
	
	public static int sumEvenFibs()
	{
		long startTime = System.currentTimeMillis();
		int sum = 0;
		for (int i = 0; i < 200000000; i++)
		{
			if (fib(i) > 2100000000)
				break;
			else
				if (fib(i) % 2 == 0)
				sum = sum + fib(i);
		}
		long endTime = System.currentTimeMillis();
		System.out.println("That took " + (endTime - startTime) + " milliseconds");
		return sum;
	}
	
	public static void main (String args[])
	{
		
		System.out.println(sumEvenFibs());
		
	}
	
}
