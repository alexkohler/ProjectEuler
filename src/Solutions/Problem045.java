package Solutions;
/*
 * Author Alexander Kohler
 */
public class Problem045 {
/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
 */
	
	//Initial metrics - 40s :<
		//Attempts to better metrics - changed all loop conditions from 100,000 to 80,0000
	
	
		//****After researching thread ****
		//There is a formula for pentagonal triangular numbers - did not implement
	
		//All hexgonal numbers are triangular - implemented, metrics jumped down to 3367ms
		//Changed loop condition to around 40k, jumped down to 914ms
		//Put h on outside (since it will undoubtedly by less than p), and then started p at h every loop, didn't see chnage
	
	
	static long triangular(long n)
	{
		return (n *(n + 1) / 2);
	}
	
	static long pentagonal(long n)
	{
		return (n * (3 * n - 1) / 2);
	}
	
	static long hexgonal(long n)
	{
		return (n * (2 * n - 1));
	}
	
	
	
	
	public static void main(String[] args) {
		long startTime = System.currentTimeMillis();
		boolean found = false;
		for (long h = 144; h < 35000; h++) //scale your data sets appropriately - think about how large the numbers you computed were
		{
			for (long p = h; p < 35000; p++) 
			{
						if (pentagonal(p) == hexgonal(h))
						{
							System.out.println(hexgonal(h));
							found = true;
							break;
						}
					}
					if (found)
						break;
			}

	
		long endTime = System.currentTimeMillis();
		System.out.println("That took " + (endTime - startTime) + "ms");
	}

}
